

NESSA LECTURE, VEREMOS COMO O SEARCH OPTIMIZATION SERVICE 
FUNCIONA, NO SNOWFLAKE...





APRENDEMOS QUE QUANDO APLICAMOS 



O SEARCH OPTIMIZATION SERVICE EM 1 COLUMN ESPECÍFICA, EM 1 TABLE,

ISSO 

VAI 


CRIAR 


1 STORAGE ADICIONAL, PARA ESSA COLUMN....











--> COMO COM AQUELA TABLE DE 158GB,

QUE ACABOU CRIANDO 


1 STORAGE EXTRA DE 30GB...







ISSO PODE SER VISTO COM 


"SHOW TABLES",




na column de "search_optimization_bytes"....













--> ISSO QUER DIZER, EM OUTRAS PALAVRAS,


QUE O SNOWFLAKE ESTÁ MANAGEANDO UMA STORAGE 
AREA SEPARADA PARA ESSA TABLE ESPECÍFICA,

QUANDO 

APLICAMOS 

SOS 

EM QUALQUER COLUMN DESSA TABLE...

(


    CRIACAO DE UMA SEPARATE STORAGE AREA...
)












--> MAS O QUE ESSA SEPARATE STORAGE AREA,
criada em decorrencia direta do uso 
do SOS,

faz?







ELA BASICAMENTE 


ATUA COMO UM INDEX,


COMO INDEXES VISTOS EM 

DATABASES TRADICIONAIS --> QUER DIZER QUE ELA MANTÉM 

UM LOOKUP DE TODOS OS VALUES NA COLUMN EM QUE 

APLICAMOS O SOS...









--> ESSA STORAGE AREA TAMBÉM FAZ MAINTAIN


DOS ADDRESSES DAS PARTITIONS 

QUE SAO ARMAZENADAS NO REMOTE STORAGE LAYER --> QUER DIZER QUE 

QUANDO EXECUTAMOS 


ESSA QUERY,

O SNOWFLAKE 



VAI PRIMEIRAMENTE 

FAZER 

UMA PESQUISA NESSA TABLE DE LOOKUPS,



E COM BASE NO OUTPUT DESSA TABLE, 


ELE VAI "REACH OUT" 




ÀS PARTITIONS ESPECÍFICAS QUE VC QUER RETRIEVAR 

DA QUERY...









--> ISSO QUER DIZER QUE 



A SEPARATE STORAGE AREA 


FUNCIONA COMO UM INDEX TABLE,


E NOS AJUDA A GO E FETCH 



AS MICRO PARTITIONS CORRETAS,


LÁ DO REMOTE STORAGE LAYER...











--> O PROFESSOR DIZ QUE É TIPO UM INDEX,

MAS NAO É EXATAMENTE 1 INDEX... --> ISSO PQ 



ESSA SEPARATE STORAGE AREA NAO FAZ ENFORCE DE QUALQUER 
"UNIQUENESS"

NA COLUMN EM QUE 

O SOS ESTÁ SENDO APLICADO... ------_> E TAMBÉM 


ESSA STORAGE AREA 

NAO FAZ 

ENFORCE DE NENHUMA 

CONSTRAINT "nOT NULL"...











--> OK... QUER DIZER QUE 

QUANDO APLICAMOS 

ESSE SOS EM 1 COLUMN,




O SNOWFLAKE VAI ARMAZENAR ALGUNS BYTES...












--> OK, MAS COMO O SNOWFLAKE ESTÁ ARMAZENANDO ESSES BYTES?








--> ELE BASICAMENTE CRIA 1 MATERIALIZED VIEW...



1 MATERIALIZED VIEW 


COM BASE NAQUELA COLUMN ESPECÍFICA...



E NESSA MATERIALIZED VIEW ELE ESTÁ ARMAZENANDO A DATA 


NECESSÁRIA PARA ATINGIR AS MICRO PARTITIONS CORRETAS,


corretas para essas queries com essas columns específicas...




