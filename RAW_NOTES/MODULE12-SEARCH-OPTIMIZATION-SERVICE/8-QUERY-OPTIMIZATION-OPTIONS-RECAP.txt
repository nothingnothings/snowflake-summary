QUER DIZER QUE 

O 




SNOWFLAKE NOS PROVIDENCIOU 3 OPTIONS...









OPTIONS:






1) CLUSTERING --> VOCE PODE IDENTIFICAR 

AS CLUSTERING KEYS, E AÍ VC PODE APLICAR CLUSTERING...







--. ISSO VAI ORGANIZAR AS 

MICROPARTITIONS NO BACKGROUND... SE VC ENTAO QUERIAR A TABLE 

COM BASE NA CLUSTERING KEY,

A QUERY VAI CERTAMENTE EXECUTAR MAIS RÁPIDO,



PQ 

VAI 


FETCHEAR A DATA LÁ DAS ORDERED PARTITIONS, NO BACKGROUND....











2) QUERY ACCELERATION SERVICE --> USADA QUANDO 
HÁ 
UMA LARGA QUANTIDADE 
DE 

I/O OPERATIONS ENVOLVIDA (operations em que vc 

FETCHEIA 1 GRANDE QUANTIDADE DE DATA LÁ DO STORAGE LAYER 
AO VIRTUAL WAREHOUSE LAYER) ---> NESSE CASO,

O SNOWFLAKE TE DÁ ESSA OPTION,



QUE 


FAZ SPIN-UP, NO BACKGROUND,

DE UM MONTE DE MÁQUINAS AO SEU VIRTUAL WAREHOUSE,

E AÍ 



TENTA 


MELHORAR A I/O OPERATION DE SUAS QUERIES PARTICULARES (individuais) ---> e isso 
reduz o query response time...











3) SEARCH OPTIMIZATION SERVICE --> no caso disso,


O 


SNOWFLAKE USA EXTRA STORAGE PARA "KEEP TRACK"



DAS MICRO PARTITIONS --> O SNOWFLAKE 


OLHA NESSA STORAGE AREA SEPARADA (que age como um index)



E ENTAO VAI TENTAR FILTRAR/ENCONTRAR 

AS PARTITIONS 

NO REMOTE STORAGE LAYER QUE 


CORRESPONDAM A SUA QUERY (pequenos result sets, muitos filters, etc)....













--> QUER DIZER QUE TEMOS DIFERENTES CENÁRIOS PARA A APLICACAO DE 

CLUSTERING,

QUERY ACCELERATION SERVICE 

E 

SEARCH OPTIMIZATION SERVICE...