







NESSA AULA, TENTAREMOS ENTENDER A CLONE FEATURE NO SNOWFLAKE...









--> QUANDO DIZEMOS QUE ESTAMOS "CLONANDO UMA TABLE NO SNOWFLAKE",


QUEREMOS DIZER QUE 





ESTAMOS ""TIRANDO UMA COPIA DA METADATA DAQUELA TABLE""... 












--> OU SEJA,


A NOVA CÓPIA DA METADATA VAI ESTAR APONTANDO 

__ PARA __ A MESMA STORAGE AREA,

NO BACKEND...














--> MAS É CLARO QUE A TABLE ORIGINAL E O "CLONE"


MANTERÃO-SE
INDEPENDENTES 


UMA DA OUTRA...







--> MAS VEREMOS COMO 

ELES SE MANTÉM INDEPENDENTES NA PRÓXIMA AULA....








--> OK... MAS DIGAMOS QUE O 




DEV EXECUTA ISTO:








CREATE TRANSIENT TABLE TABLE_B CLONE TABLE_A;










COM  ISSO, ELE ESTÁ CLONANDO A METADATA 


DA 

TABLE A PARA A TABLE B...








--> COPIANDO A METADATA DA TABLE A,

ESSENCIALMENTE...





--> A NOVA TABLE,

CHAMADA TABLE B,

VAI SER CRIADA COM A MESMA METADATA DA TABLE A... --> E ESSA TABLE 



B 


__  VAI FICAR APONTANDO PARA OS MESMOS 

"TABLE FILE VERSIONS", LÁ NO BACKEND (
    apontando à mesma storage area...

)














--> OK.... E, NO FUTURO, SE VC REALIZAR QUAISQUER 

CHANGES NA TABLE A,

OU SE VC 

FIZER QUAISQUER CHANGES NA TABLE B,



AMBAS TABLES CONTINUARAO INDEPENDENTES 1 EM RELACAO A OUTRA -> PQ QUALQUER 


CHANGE 



ADICIONADA 



NA TABLE B ___ SERÁ __ TRACKADA PELA NOVA METADATA COPY DA 

TABLE B...









---> E QUALQUER CHANGE FEITA NA TABLE A 


SERÁ TRACKADA 
PELA METADATA DA TABLE A (
    quer dizer que 

    A DATA/CHANGES NESSAS TABLES NAO VAI OVERLAP...
)













--> PORTANTO,

A PRIMEIRA COISA QUE VC PRECISA SABER SOBRE CLONES É:


1) VOCE NAO ESTÁ FAZENDO UMA NOVA CÓPIA DE STORAGE, NO BACKEND,

E SIM 

APENAS 


UMA COPY DA METADATA 

DA TABLE ORIGINAL..



