More on time travel.
There are several ways to do time travel. Please find some important examples below,



Select historical data from a table using a specific timestamp:

select * from my_table at(timestamp => 'Mon, 01 May 2015 16:20:00 -0700'::timestamp);
select * from my_table at(timestamp => to_timestamp(1432669154242, 3));
Select historical data from a table as of 5 minutes ago:

select * from my_table at(offset => -60*5) as t where t.flag = 'valid';
Select historical data from a table up to, but not including any changes made by the specified transaction:

select * from my_table before(statement => '8e5d0ca9-005e-44e6-b858-a8f5b37c5726');
Return the difference in table data resulting from the specified transaction:

select oldt.* ,newt.*
  from my_table before(statement => '8e5d0ca9-005e-44e6-b858-a8f5b37c5726') as oldt
    full outer join my_table at(statement => '8e5d0ca9-005e-44e6-b858-a8f5b37c5726') as newt
    on oldt.id = newt.id
where oldt.id is null or newt.id is null;



















OS COMANDOS INTERESSANTES, AQUI, SAO:




Select historical data from a table up to, 
but NOT INCLUDING ANY changes made by the specified transaction:


SELECT * from MY_TABLE 
BEFORE(statement => '8e5d0ca9-005e-44e6-b858-a8f5b37c5726');







Return the difference in table
 data resulting from the specified transaction:








SELECT oldt.* ,newt.*
  FROM my_table
   BEFORE(statement => '8e5d0ca9-005e-44e6-b858-a8f5b37c5726') AS oldt
    FULL OUTER JOIN my_table AT(statement => '8e5d0ca9-005e-44e6-b858-a8f5b37c5726') AS newt
    ON oldt.id = newt.id
WHERE oldt.id is null OR newt.id IS NULL;